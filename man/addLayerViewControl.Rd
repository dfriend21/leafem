% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layerviewcontrol.R
\name{addLayerViewControl}
\alias{addLayerViewControl}
\title{Add Custom View Controls to Leaflet Map}
\usage{
addLayerViewControl(
  map,
  view_settings,
  home_btns = FALSE,
  home_btn_options = list()
)
}
\arguments{
\item{map}{A `leaflet` or `mapview` object to which view controls will be added.}

\item{view_settings}{A list specifying the view settings for each layer. Each list element should contain
either:
\itemize{
  \item \code{coords}: A vector of length 2 (latitude, longitude) for setting the view, or length 4
  (bounding box: lat1, lng1, lat2, lng2) for fitting the bounds.
  \item \code{zoom}: The zoom level (used for `setView`).
  \item \code{fly} (optional): A logical indicating whether to use `flyTo` or `flyToBounds` instead of `setView` or `fitBounds`.
  \item \code{options} (optional): Additional options to pass to `setView`, `fitBounds`, or `flyTo`.
}}

\item{home_btns}{Logical. If `TRUE`, adds a "home" button next to each layer name in the layer control.
Clicking the home button zooms the map to the view specified for that layer in \code{view_settings}.}

\item{home_btn_options}{A list of options to customize the home button appearance and behavior.
Possible options include:
- `text`: The text or emoji to display on the button (default is 'üè†').
- `cursor`: CSS cursor style for the button (default is 'pointer').
- `class`: CSS class name for the button (default is 'leaflet-home-btn').
- `styles`: Semicolon separated CSS-string (default is 'float: inline-end;').}
}
\value{
A modified `leaflet` map object with view controls and home buttons.
}
\description{
This function adds custom views per group and optional home buttons for zooming to specific layers
or bounding boxes in a `leaflet` map.
}
\details{
This function generates JavaScript that listens for `overlayadd` or `baselayerchange` events
and automatically sets the view or zoom level according to the specified \code{view_settings}.
If `home_btns` is enabled, a home button is added next to each layer in the layer control.
When clicked, it zooms the map to the predefined view of that layer.
}
\examples{
library(sf)
library(leaflet)
library(leafem)

# Example data ##########
breweries91 <- st_as_sf(breweries91)
lines <- st_as_sf(atlStorms2005)
polys <- st_as_sf(leaflet::gadmCHE)

# View settings ##########
view_settings <- list(
  "Base_tiles1" = list(
    coords = c(20, 50)
    , zoom = 3
  ),
  "Base_tiles2" = list(
    coords = c(-110, 50)
    , zoom = 5
  ),
  "breweries91" = list(
    coords = as.numeric(st_coordinates(st_centroid(st_union(breweries91))))
    , zoom = 8
  ),
  "atlStorms2005" = list(
    coords = as.numeric(st_bbox(lines))
    , options = list(padding = c(110, 110))
  ),
  "gadmCHE" = list(
    coords = as.numeric(st_bbox(polys))
    , options = list(padding = c(2, 2))
    , fly = TRUE
  )
)

leaflet() \%>\%
  ## Baselayer
  addTiles(group = "Base_tiles1") \%>\%
  addProviderTiles("CartoDB", group = "Base_tiles2") \%>\%

  ## Overlays
  addCircleMarkers(data = breweries91, group = "breweries91") \%>\%
  addPolylines(data = lines, group = "atlStorms2005") \%>\%
  addPolygons(data = polys, group = "gadmCHE") \%>\%

  ## LayerViewControl
  addLayerViewControl(
    view_settings, home_btns = TRUE,
    home_btn_options = list(
      "Base_tiles1" = list(text = 'üè°', cursor = 'ns-resize', class = 'homebtn'),
      "Base_tiles2" = list(text = '‚ù§Ô∏è', cursor = 'pointer'),
      "atlStorms2005" = list(text = 'üåé', cursor = 'all-scroll'),
      "breweries91" = list(text = 'üåé', styles = 'background-color: red'),
      "gadmCHE" = list(text = 'üåé', styles = 'float: none;')
     )
  ) \%>\%

  ## LayersControl
  addLayersControl(
    baseGroups = c("Base_tiles1", "Base_tiles2"),
    overlayGroups = c("breweries91", "atlStorms2005", "gadmCHE"),
    options = layersControlOptions(collapsed = FALSE, autoZIndex = TRUE)
  )

}
